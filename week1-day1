# Day 1: Foundations of Verilog RTL Design & Synthesis

Welcome to **Day 1** of this RTL Workshop!  
Today, you will begin learning digital logic design using Verilog, simulating designs with **Icarus Verilog (iverilog)**, visualizing results in **GTKWave**, and performing basic synthesis using **Yosys**. This guide is beginner-friendly and provides step-by-step instructions.

---

## 1. Simulator, Design, and Testbench Explained

- **Simulator:** Software that allows you to check the behavior of your digital circuits by providing inputs and observing outputs before actual hardware implementation.  
- **Design:** The Verilog RTL code describing your digital logic.  
- **Testbench:** A Verilog setup that applies different input scenarios to your design to verify correctness.

---

## 2. Getting Started with Icarus Verilog

**Icarus Verilog (iverilog)** is an open-source Verilog simulator. It takes your design and testbench and produces simulation output files, typically a `.vcd` waveform file.

- The `.vcd` file can be opened in **GTKWave** to inspect signal changes over time.  
- Make sure the required tools are installed:

```bash
sudo apt update
sudo apt install iverilog gtkwave gvim -y
